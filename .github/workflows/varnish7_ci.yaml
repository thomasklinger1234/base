---
name: VARNISH7_CI

on:
  push:
    branches:
      - "**"
  pull_request_target:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - edited
  workflow_dispatch:
    inputs: { }

concurrency:
  group: ${{ github.head_ref || github.run_id }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  issues: write
  pull-requests: write # coverage reporting
  contents: write # release
  security-events: write # container scanning
  actions: read
  packages: write # container publishing
  id-token: write # container signing
  checks: write # coverage reporting

env: {}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: GIT_CHECKOUT
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: GIT_CONFIGURE
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: DOCKER_SETUP_QEMU
        uses: docker/setup-qemu-action@v3

      - name: DOCKER_SETUP_BUILDX
        uses: docker/setup-buildx-action@v3

      - name: COSIGN_SETUP
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.2.2'

      - name: DOCKER_METADATA
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/shopentrance/varnish7
          tags: |
            type=schedule,enable=true,pattern=nightly
            type=ref,enable=true,event=branch,pattern=v{{date 'YYYYMMDD'}}-{{sha}}
            type=ref,enable=true,event=pr,pattern=v{{date 'YYYYMMDD'}}-{{sha}}-{{branch}}
            type=ref,event=tag,pattern=v{{date 'YYYYMMDD'}}-{{sha}}
            type=sha,enable=true,pattern=v{{date 'YYYYMMDD'}}-{{sha}}
            type=raw,value=v{{date 'YYYYMMDD'}}-{{sha}}
          labels: |
            org.opencontainers.image.title=varnish7
            org.opencontainers.image.description=varnish7
            org.opencontainers.image.vendor=varnish7

      - name: DOCKER_LOGIN
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DOCKER_BUILD
        uses: docker/build-push-action@v5
        with:
          context: "bases/varnish7"
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          platforms: |
            linux/amd64

      - name: COSIGN_SIGN
        run: |
          cosign sign --yes --rekor-url "https://rekor.sigstore.dev/" ${TAGS}
        env:
          COSIGN_EXPERIMENTAL: 1
          TAGS: ${{ steps.docker_metadata.outputs.tags }}

#      - name: TRIVY_SCAN
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'ghcr.io/${{ github.repository_owner }}/shopentrance/varnish7:edge'
#          format: 'sarif'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL,HIGH'
#          output: 'trivy-results.sarif'
#
#      - name: TRIVY_SARIF_UPLOAD
#        uses: github/codeql-action/upload-sarif@v2
#        if: always()
#        with:
#          sarif_file: 'trivy-results.sarif'

  ci_automerge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    needs: [ ci ]
    steps:
      - name: DEPENDABOT_FETCH_METADATA
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: GITHUB_PR_MERGE
        if: "steps.metadata.outputs.update-type == 'version-update:semver-patch'"
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
